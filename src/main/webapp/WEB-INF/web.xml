<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <display-name>demoweb</display-name>

    <!--Dispatcher Servlet-->
    <servlet>
        <servlet-name>appServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>
                /WEB-INF/spring/root-context.xml
                /WEB-INF/spring/appServlet/servlet-context.xml
            </param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- 모든 요청이긴 구체적 매핑이 없어 처리되지 못한 것이 Dispatcher Servlet 으로 오게 된다. -->
    <!-- css, js 파일 같이 정적 리소스들이 dispatcher servlet 으로 오지 않는 이유는 -->
    <!-- 톰캣이 실행될 때 Servlet Container 에 자동으로 default servlet 이 올라가는데 -> servlet context 확인해보자 -->
    <!-- 이 서블릿은 정적 리소스에 대한 처리를 우선적으로 해주기 때문에 Dispatcher Servlet 으로 오지 않게 된다. -->
    <!-- 그러나 /* 로 매핑을 해주게 되면 모든 요청에 대해서 Dispatcher Servlet 이 위임 받기 때문에 정적 리소스까지도 받게 되어 404나 화면이 이상하게 나오게 되는 것이다.
         Dispatcher Servlet 은 항상 /로 매핑하도록 하자-->

    <servlet-mapping>
        <servlet-name>appServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    </filter>

    <!-- 모든 요청에 대해서 필터 처리 -->
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>